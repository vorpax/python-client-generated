# coding: utf-8

"""
    Services API Géorisques

    Description de l'API de Géorisques  # noqa: E501

    OpenAPI spec version: 1.9.4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CatNat(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'code_national_catnat': 'str',
        'date_debut_evt': 'date',
        'date_fin_evt': 'date',
        'date_publication_arrete': 'date',
        'date_publication_jo': 'date',
        'libelle_risque_jo': 'str',
        'code_insee': 'str',
        'libelle_commune': 'str'
    }

    attribute_map = {
        'code_national_catnat': 'code_national_catnat',
        'date_debut_evt': 'date_debut_evt',
        'date_fin_evt': 'date_fin_evt',
        'date_publication_arrete': 'date_publication_arrete',
        'date_publication_jo': 'date_publication_jo',
        'libelle_risque_jo': 'libelle_risque_jo',
        'code_insee': 'code_insee',
        'libelle_commune': 'libelle_commune'
    }

    def __init__(self, code_national_catnat=None, date_debut_evt=None, date_fin_evt=None, date_publication_arrete=None, date_publication_jo=None, libelle_risque_jo=None, code_insee=None, libelle_commune=None):  # noqa: E501
        """CatNat - a model defined in Swagger"""  # noqa: E501
        self._code_national_catnat = None
        self._date_debut_evt = None
        self._date_fin_evt = None
        self._date_publication_arrete = None
        self._date_publication_jo = None
        self._libelle_risque_jo = None
        self._code_insee = None
        self._libelle_commune = None
        self.discriminator = None
        if code_national_catnat is not None:
            self.code_national_catnat = code_national_catnat
        if date_debut_evt is not None:
            self.date_debut_evt = date_debut_evt
        if date_fin_evt is not None:
            self.date_fin_evt = date_fin_evt
        if date_publication_arrete is not None:
            self.date_publication_arrete = date_publication_arrete
        if date_publication_jo is not None:
            self.date_publication_jo = date_publication_jo
        if libelle_risque_jo is not None:
            self.libelle_risque_jo = libelle_risque_jo
        if code_insee is not None:
            self.code_insee = code_insee
        if libelle_commune is not None:
            self.libelle_commune = libelle_commune

    @property
    def code_national_catnat(self):
        """Gets the code_national_catnat of this CatNat.  # noqa: E501

        Identifiant unique d'un arrêté de catastrophe naturelle  # noqa: E501

        :return: The code_national_catnat of this CatNat.  # noqa: E501
        :rtype: str
        """
        return self._code_national_catnat

    @code_national_catnat.setter
    def code_national_catnat(self, code_national_catnat):
        """Sets the code_national_catnat of this CatNat.

        Identifiant unique d'un arrêté de catastrophe naturelle  # noqa: E501

        :param code_national_catnat: The code_national_catnat of this CatNat.  # noqa: E501
        :type: str
        """

        self._code_national_catnat = code_national_catnat

    @property
    def date_debut_evt(self):
        """Gets the date_debut_evt of this CatNat.  # noqa: E501

        Date début de l'évènement  # noqa: E501

        :return: The date_debut_evt of this CatNat.  # noqa: E501
        :rtype: date
        """
        return self._date_debut_evt

    @date_debut_evt.setter
    def date_debut_evt(self, date_debut_evt):
        """Sets the date_debut_evt of this CatNat.

        Date début de l'évènement  # noqa: E501

        :param date_debut_evt: The date_debut_evt of this CatNat.  # noqa: E501
        :type: date
        """

        self._date_debut_evt = date_debut_evt

    @property
    def date_fin_evt(self):
        """Gets the date_fin_evt of this CatNat.  # noqa: E501

        Date fin de l'évènement  # noqa: E501

        :return: The date_fin_evt of this CatNat.  # noqa: E501
        :rtype: date
        """
        return self._date_fin_evt

    @date_fin_evt.setter
    def date_fin_evt(self, date_fin_evt):
        """Sets the date_fin_evt of this CatNat.

        Date fin de l'évènement  # noqa: E501

        :param date_fin_evt: The date_fin_evt of this CatNat.  # noqa: E501
        :type: date
        """

        self._date_fin_evt = date_fin_evt

    @property
    def date_publication_arrete(self):
        """Gets the date_publication_arrete of this CatNat.  # noqa: E501

        Date de publication de l'arrêté de catastrophe naturelle  # noqa: E501

        :return: The date_publication_arrete of this CatNat.  # noqa: E501
        :rtype: date
        """
        return self._date_publication_arrete

    @date_publication_arrete.setter
    def date_publication_arrete(self, date_publication_arrete):
        """Sets the date_publication_arrete of this CatNat.

        Date de publication de l'arrêté de catastrophe naturelle  # noqa: E501

        :param date_publication_arrete: The date_publication_arrete of this CatNat.  # noqa: E501
        :type: date
        """

        self._date_publication_arrete = date_publication_arrete

    @property
    def date_publication_jo(self):
        """Gets the date_publication_jo of this CatNat.  # noqa: E501

        Date de publication au Journal officiel  # noqa: E501

        :return: The date_publication_jo of this CatNat.  # noqa: E501
        :rtype: date
        """
        return self._date_publication_jo

    @date_publication_jo.setter
    def date_publication_jo(self, date_publication_jo):
        """Sets the date_publication_jo of this CatNat.

        Date de publication au Journal officiel  # noqa: E501

        :param date_publication_jo: The date_publication_jo of this CatNat.  # noqa: E501
        :type: date
        """

        self._date_publication_jo = date_publication_jo

    @property
    def libelle_risque_jo(self):
        """Gets the libelle_risque_jo of this CatNat.  # noqa: E501

        Libellé du risque au Journal officiel  # noqa: E501

        :return: The libelle_risque_jo of this CatNat.  # noqa: E501
        :rtype: str
        """
        return self._libelle_risque_jo

    @libelle_risque_jo.setter
    def libelle_risque_jo(self, libelle_risque_jo):
        """Sets the libelle_risque_jo of this CatNat.

        Libellé du risque au Journal officiel  # noqa: E501

        :param libelle_risque_jo: The libelle_risque_jo of this CatNat.  # noqa: E501
        :type: str
        """

        self._libelle_risque_jo = libelle_risque_jo

    @property
    def code_insee(self):
        """Gets the code_insee of this CatNat.  # noqa: E501

        Identifiant unique INSEE de la commune  # noqa: E501

        :return: The code_insee of this CatNat.  # noqa: E501
        :rtype: str
        """
        return self._code_insee

    @code_insee.setter
    def code_insee(self, code_insee):
        """Sets the code_insee of this CatNat.

        Identifiant unique INSEE de la commune  # noqa: E501

        :param code_insee: The code_insee of this CatNat.  # noqa: E501
        :type: str
        """

        self._code_insee = code_insee

    @property
    def libelle_commune(self):
        """Gets the libelle_commune of this CatNat.  # noqa: E501

        Libellé de la commune  # noqa: E501

        :return: The libelle_commune of this CatNat.  # noqa: E501
        :rtype: str
        """
        return self._libelle_commune

    @libelle_commune.setter
    def libelle_commune(self, libelle_commune):
        """Sets the libelle_commune of this CatNat.

        Libellé de la commune  # noqa: E501

        :param libelle_commune: The libelle_commune of this CatNat.  # noqa: E501
        :type: str
        """

        self._libelle_commune = libelle_commune

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CatNat, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CatNat):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
